- alias: GoodWe SEMS Portal Polling
  id: goodwe_sems_polling
  trigger:
    - platform: time_pattern
      seconds: 00
  condition:
    - condition: time
      after: "00:10:00"
      before: "23:59:00"
  action:
    - service: homeassistant.update_entity
      data: {}
      target:
        entity_id:
          - sensor.homekit_91000hku21b00500
          - sensor.homekit_91000hku21b00500_export
         # - sensor.homekit_91000hku21b00500_export_compensation
          - sensor.homekit_91000hku21b00500_import
         # - sensor.homekit_91000hku21b00500_import_cost
          - sensor.inverter_5010kmst233w0080
          - sensor.inverter_5010kmst233w0080_energy
  mode: single

####GARAGE#####
- alias: 'Garage open light flash kitchen 2 min Lights On'
  id: garage_open_light_flash_kitchen_lights_on
  trigger:
    platform: time_pattern
    minutes: '/2'
    seconds: 00
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: cover.garage_door
        state: 'open'
      - condition: state
        entity_id: light.kitchen
        state: 'on'
      - condition: state  
        entity_id: switch.cooking_light
        state: 'off'           
  action:
    - service: light.turn_on
      entity_id: light.kitchen_1
      data:
        brightness: 255
        rgb_color: 
          - 255 
          - 0
          - 0
    - delay: 00:00:01
    - service: adaptive_lighting.set_manual_control
      data:
        manual_control: false
        entity_id: switch.adaptive_lighting_adapt_brightness_kitchen

- alias: 'Garage open light flash kitchen 2 min Cooking Light On'
  id: garage_open_light_flash_kitchen_cooking_light_on
  trigger:
    platform: time_pattern
    minutes: '/2'
    seconds: 00
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: cover.garage_door
        state: 'open'
      - condition: state
        entity_id: light.kitchen
        state: 'on'
      - condition: state  
        entity_id: switch.cooking_light
        state: 'on'           
  action:
    - service: light.turn_on
      entity_id: light.kitchen_1
      data:
        brightness: 255
        rgb_color: 
          - 255 
          - 0
          - 0
    - delay: 00:00:01
    - service: light.turn_on
      data:
        entity_id: light.kitchen
        brightness: 255
        color_temp: 153

- alias: 'Garage open light flash kitchen 2 min Lights off'
  id: garage_open_light_flash_kitchen_lights_off
  trigger:
    platform: time_pattern
    minutes: '/2'
    seconds: 00
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: cover.garage_door
        state: 'open'
      - condition: state
        entity_id: light.kitchen
        state: 'off'
  action:
    - service: switch.turn_off
      entity_id: switch.adaptive_lighting_kitchen   
    - service: light.turn_on
      entity_id: light.kitchen_1
      data:
        brightness: 255
        rgb_color: 
          - 255 
          - 0
          - 0
    - delay: 00:00:02
    - service: light.turn_off
      entity_id: light.kitchen_1
    - service: switch.turn_on
      entity_id: switch.adaptive_lighting_kitchen   

- alias: 'Garage night alarm 15 min'
  trigger:
    platform: time_pattern
    minutes: 15
    seconds: 00
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: cover.garage_door
        state: 'open'
      - condition: time
        after: '19:00:00'
  action:
    - service: notify.mobile_app_ichicane
      data:
        message: 'You might want to close it :)'
        title: 'Garage Door open!'
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'
    - service: notify.mobile_app_duffel
      data:
        title: 'Garage Door open!'
        message: 'You might want to close it :)'
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'        
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Alert!, Garage door is open"

- alias: 'Garage night alarm on open'
  trigger:
    platform: state
    entity_id: cover.garage_door
    to: 'open'

  condition:
    condition: time
    after: '20:00:00'

  action:
    - service: notify.mobile_app_ichicane
      data:
        title: 'Garage Door just opened!'
        message: "It's late, was that a mistake? You might want to close it :)"
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'

    - service: notify.mobile_app_duffel
      data:
        title: 'Garage Door just opened!'
        message: "It's late, was that a mistake? You might want to close it :)"
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Alert!, Garage door just opened"


- alias: 'Garage not home alarm on open'
  trigger:
    platform: state
    entity_id: cover.garage_door
    to: 'open'
  condition:
    condition: template
    value_template: "{{ not is_state('group.at_home', 'home') }}"
  action:
#    service: notify.chicane_pushbullet
#    data:
#      title: 'Garage Door just opened and no-ones home!'
#      message: "No-one's home, was that a mistake? You might want to close it :)"
#      target: 'device/iChicane'
    - service: notify.mobile_app_ichicane
      data:
        title: "Garage Door just opened and no-one's home!"
        message: "No-one's home, was that a mistake? You might want to close it :)"
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'

    - service: notify.mobile_app_duffel
      data:
        title: "Garage Door just opened and no-one's home!"
        message: "No-one's home, was that a mistake? You might want to close it :)"
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'

#        identifier: 'garage'
#        actions:
#          - identifier: 'CLOSE_GARAGE'
#            title: 'Close Garage'
#            destructive: true
#            authenticationRequired: true
#          - identifier: 'DO_NOTHING'
#            title: 'Do Nothing'
        #  push:
        #    category: 'garage'

- alias: 'Garage leaving home alarm'
  trigger:
    platform: state
    entity_id: group.at_home
    from: 'home'
  condition:
    condition: state
    entity_id: cover.garage_door
    state: 'open'
  action:
    - service: notify.mobile_app_ichicane
      data:
        title: "Garage Doors still open and no-one's home!"
        message: "No-one's home, was that a mistake? You might want to close it :)"
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'
    - service: notify.mobile_app_duffel
      data:
        title: "Garage Doors still open and no-one's home!"
        message: "No-one's home, was that a mistake? You might want to close it :)"
        data:
          actions:
           - action: 'CLOSE_GARAGE'
             title: 'Close Garage'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'         
  
###IOS GARAGE PUSH BUTTON###

- alias: iOS Push - Close the Garage
  id: ios_push_close_garage
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: CLOSE_GARAGE
  condition:
    condition: state
    entity_id: cover.garage_door
    state: 'open'
  action:
    service: cover.close_cover
    entity_id: cover.garage_door


###Bedroom Heater###
#- alias: 'Turn on Bedroom Heater when cold'
#  trigger:
#    platform: template
#    value_template: "{% if states.sensor.bedroom_temperature.state | float < states.input_number.heater_on_below_temp.state | float %} true {% endif %}"
#  condition:
#    condition: and
#    conditions:
#      - condition: time
#        after: '20:00:00'
#        before: '06:30:00'
#      - condition: state
#        entity_id: group.at_home
#        state: 'home'
#      - condition: state
#        entity_id: climate.bedroom_aircon
#        state: 'off'
#  action:
#    - service: climate.set_hvac_mode
#      target:
#        entity_id: climate.bedroom_aircon
#      data:
#        hvac_mode: heat
#    - service: climate.set_temperature
#      target:
#        entity_id: climate.bedroom_aircon
#      data:
#        hvac_mode: heat
#        temperature: 24
#    - service: climate.set_fan_mode
#      target:
#        entity_id: climate.bedroom_aircon
#      data:
#        fan_mode: medium        
          

#- alias: 'Turn on Bedroom Heater when 8pm'
#  trigger:
#    platform: time
#    at: '20:00:00'
#  condition:
#    condition: and
#    conditions:
#      - condition: template
#        value_template: "{% if states.sensor.bedroom_temperature.state | float < states.input_number.heater_on_below_temp.state | float %} true {% endif %}"
#      - condition: state
#        entity_id: group.at_home
#        state: 'home'
#      - condition: state
#        entity_id: climate.bedroom_aircon
#        state: 'off'
#  action:
#    - service: climate.set_hvac_mode
#      target:
#        entity_id: climate.bedroom_aircon
#      data:
#        hvac_mode: heat
#    - service: climate.set_temperature
#      target:
#        entity_id: climate.bedroom_aircon
#      data:
#        hvac_mode: heat
#        temperature: 24
#    - service: climate.set_fan_mode
#      target:
#        entity_id: climate.bedroom_aircon
#      data:
#        fan_mode: medium


#- alias: 'Turn off Bedroom Heater when hot'
#  trigger:
#    platform: template
#    value_template: "{% if states.sensor.bedroom_temperature.state | float > states.input_number.heater_off_above_temp.state | float %} true {% endif %}"
#  condition:
#    condition: state
#    entity_id: climate.bedroom_aircon
#    state: 'heat'
#
#  action:
#    service: climate.turn_off
#    entity_id: climate.bedroom_aircon

#- alias: 'Turn off Bedroom Heater after 8am'
#  trigger:
#    platform: time
#    at: '08:00:00'
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: climate.bedroom_aircon
#        state: 'heat'
#      - condition: state
#        entity_id: group.at_home
#        state: 'home'
#  action:
#    service: climate.turn_off
#    entity_id: climate.bedroom_aircon

#- alias: 'Turn on Bedroom Heater at 4:30am'
#  trigger:
#    platform: time
#    at: '04:30:00'
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: switch.bedroom_heater
#        state: 'off'
#      - condition: state
#        entity_id: group.at_home
#        state: 'home'
#  action:
#    service: switch.turn_on
#    entity_id: switch.bedroom_heater

###Coffee Machine###
- alias: 'Turn on coffee machine weekday morning'
  id: turnoncoffeemachineweekday
  #initial_state: True
  trigger:
    platform: time
    at: '06:40:00'
  condition:
    condition: and
    conditions:
      #- condition: time
      #  weekday:
      #    - mon
      #    - tue
      #    - wed
      #    - thu
      #    - fri
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: device_tracker.ichicane
        #group.at_home
        state: 'home'
  action:
    service: switch.turn_on
    entity_id: switch.coffee_machine

- alias: 'Turn on coffee machine wednesday morning'
  id: turnoncoffeemachinewedmorn
  #initial_state: True
  trigger:
    platform: time
    at: '06:10:00'
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - wed
      - condition: state
        entity_id: device_tracker.ichicane
        #group.at_home
        state: 'home'
  action:
    service: switch.turn_on
    entity_id: switch.coffee_machine    

- alias: 'Turn on coffee machine holidays weekday morning'
  id: turnoncoffeemachineholidayswkdaymorning
  #initial_state: True
  trigger:
    platform: time
    at: '07:20:00'
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: device_tracker.ichicane
        state: 'home'
  action:
    service: switch.turn_on
    entity_id: switch.coffee_machine

- alias: 'Turn on coffee machine weekend morning'
  id: turnoncoffeemachineweekendmorning
  #initial_state: True
  trigger:
    platform: time
    at: '07:30:00'
  condition:
    condition: and
    conditions:
      #- condition: time
      #  weekday:
      #    - sat
      #    - sun
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'off'     
      - condition: state
        entity_id: device_tracker.ichicane
        state: 'home'
  action:
    service: switch.turn_on
    entity_id: switch.coffee_machine

- alias: 'Turn off Coffee Machine 2 hours'
  id: turnoffcoffeemachine2hours
  trigger:
    platform: state
    entity_id: switch.coffee_machine
    from: 'off'
    to: 'on'
    for:
      hours: 2
  action:
    service: switch.turn_off
    entity_id: switch.coffee_machine

- alias: 'Alert Coffee Machine 15 mins'
  id: alertcoffeemachine15mins
  trigger:
    platform: state
    entity_id: switch.coffee_machine
    from: 'off'
    to: 'on'
    for:
      minutes: 15
  condition: 
    condition: time
    after: "9:00:00"   
  action:
    - service: notify.mobile_app_ichicane
      data_template:
        title: 'Coffee Machine is warmed up and ready!'
        message: '15 Minute Lapsed'  

- alias: 'Turn off Mozzie Zapper 4 hours'
  trigger:
    platform: state
    entity_id: switch.mozzie_zapper
    from: 'off'
    to: 'on'
    for:
      hours: 4
  action:
    service: switch.turn_off
    entity_id: switch.mozzie_zapper

#- alias: 'Cat Fountain Turn off at bedtime'
#  trigger:
#    platform: state
#    entity_id: input_boolean.bedtime_triggered
#    to: 'on'
#  action:
#    service: switch.turn_off
#    entity_id: switch.cat_fountain_switch
#
#- alias: 'Cat Fountain Turn on at morning'
#  trigger:
#    - platform: sun
#      event: sunrise
#  action:
#    service: switch.turn_on
#    entity_id: switch.cat_fountain_switch


###HOLIDAYS####
- alias: 'Turn off on-holidays on arrive home'
  id: turn_off_on_holidays_arrive_home
  trigger:
    platform: state
    entity_id: group.at_home
    to: 'home'
    for:
      minutes: 5
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.on_holidays

###DEPART HOME###

- alias: 'Depart Home'
  id: departhome
  #initial_state: True
  trigger:
    - platform: state
      entity_id: group.at_home
      from: 'home'
#      for:
#        minutes: 1
  action:
    - service: scene.turn_on
      entity_id: scene.lights_off

###ARRIVE HOME###
- alias: 'Arrive Home after dark'
  id: arrive_home_after_Dark
  #initial_state: True
  trigger:
    - platform: state
      entity_id: group.at_home
      to: 'home'
    - platform: state
      entity_id: cover.garage_door
      to: 'open'    
  condition:
  - condition: and
    conditions:  
    - condition: state
      entity_id: light.loungeroom
      state: 'off'
    - condition: or
      conditions:
        - condition: and
          conditions:
            - condition: numeric_state
              entity_id: sensor.bathroom_illumination
              below: 700  
            - condition: time
              after: "12:00:00"
            - condition: sun
              before: sunset
              before_offset: "-00:45:00"      
        - condition: sun
          after: sunset
          after_offset: "-00:45:00"
  action:
    - service: scene.turn_on
      entity_id: scene.lights_on
    - condition: time
      weekday:
        - fri
        - sat
    - service: light.turn_on
      entity_id: light.Niche

###DARK AT HOME###
- alias: 'Got dark at home'
  id: got_dark_at_home
  #initial_state: True
  trigger:
    - platform: numeric_state
      entity_id: sensor.bathroom_illumination
      below: 700
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.at_home
        state: 'home'
      - condition: time
        after: "12:00:00"
      - condition: sun
        before: sunset
        before_offset: "-00:45:00"
      - condition: state
        entity_id: light.loungeroom
        state: 'off'

  action:
    - service: scene.turn_on
      entity_id: scene.lights_on
    - condition: time
      weekday:
        - fri
        - sat
    - service: light.turn_on
      entity_id: light.Niche

###SUNSET###
- alias: 'Sunset at home'
  #initial_state: True
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:45:00"
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: group.at_home
          state: 'home'
        - condition: state
          entity_id: light.loungeroom
          state: 'off'
      - condition: state
        entity_id: input_boolean.on_holidays
        state: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.lights_on
    - condition: time
      weekday:
        - fri
        - sat
    - service: light.turn_on
      entity_id: light.Niche


- alias: 'Christmas Tree at home'
  #initial_state: True
  trigger:
    - platform: sun
      event: sunset
     # offset: "00:30:00"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: group.at_home
        state: 'home'
  action:
    - service: switch.turn_on
      entity_id: switch.christmas_tree
###TURN OFF ALL LIGHTS###
- alias: 'Turn Off All Lights - Holiday'
  trigger:
    platform: time
    at: '21:30:00'
  condition:
    condition: state
    entity_id: input_boolean.on_holidays
    state: 'on'
  action:
    - service: light.turn_off
      entity_id: all

- alias: Pantry Motion On Light
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_pantry
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.pantry
        state: 'off'
  action:
    - service: light.turn_on
      entity_id: light.pantry
      data:
        brightness: 254
        color_temp: 202


- alias: Pantry Motion Off Light
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_pantry
    from: 'on'
    to: 'off'
    for: '00:10:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.pantry
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.pantry


- alias: Wardrobe Motion On Light
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_wardrobe
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.wardrobe
        state: 'off'
      - condition: state
        entity_id: input_boolean.bedtime_triggered
        state: 'off'
  action:
    - service: light.turn_on
      entity_id: light.wardrobe

- alias: Wardrobe Motion Off Light
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_wardrobe
    from: 'on'
    to: 'off'
    for: '00:10:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.wardrobe
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.wardrobe     


- alias: Garage Door On Light
  trigger:
    platform: state
    entity_id:  group.garage_door
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.garage
        state: 'off'
  action:
    - service: light.turn_on
      entity_id: light.garage

- alias: Garage Door Off Light
  trigger:
    platform: state
    entity_id: group.garage_door
    from: 'on'
    to: 'off'
    for: '00:10:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.garage
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.garage   

#- alias: Loungeroom Single Click
#  trigger:
#    - platform: event
#      event_type: zha_event
#      event_data:
#        device_ieee: "00:15:8d:00:02:85:fb:3b"
#        command: click
#        args:
#          click_type: single
#  action:
#    - service: light.toggle
#      entity_id: light.loungeroom
##    - service: light.turn_off
##      entity_id: light.cooking_light

- alias: Door Bell Ring
  trigger:
    - platform: event
      event_type: nest_event
      event_data:
        #nest_event_id: WyIxNjc3NjYzNTM4IiwgIm46MSJd
        device_id: 5c65af05df52f38a223e3cc870a55275
        type: doorbell_chime
     # event_type: zha_event
     # event_data:
      #  device_ieee: "00:15:8d:00:02:85:fb:3b"
       
        #command: click
        #args:
        #  click_type: single
  action:
    - service: media_player.play_media
      data:
        media_content_id: 'http://10.0.1.4:8123/local/jetsons-doorbell.mp3'
        media_content_type: 'music'
      target:
        entity_id: media_player.chicane
      
 
    #- service: media_player.turn_on
    #  data:
    #    entity_id: media_player.whole_house 
    #- delay: '00:00:02'    
    #- service: input_number.set_value
    #  data:
    #    entity_id: input_number.speaker_whole_house_volume_backup
    #    value: "{{ (state_attr('media_player.whole_house','volume_level')) | round(4) }}"
    #- service: media_player.volume_set
    #  data:
    #    volume_level: .8
    #  target:
    #    entity_id: media_player.whole_house
    #- service: media_player.play_media
    #  data:
    #    entity_id: media_player.whole_house
    #    media_content_id: 'http://10.0.1.4:8123/local/jetsons-doorbell.mp3'
    #    media_content_type: 'audio/mp3'
    #- delay: '00:00:06'
    #- service: media_player.volume_set
    #  data:
    #    volume_level:  "{{ states('input_number.speaker_whole_house_volume_backup') }}"
    #  target:
    #    entity_id: media_player.whole_house  
     
  
#- alias: Door Bell Ring Not Home
#  trigger:
#    - platform: event
#      event_type: zha_event
#      event_data:
#        device_ieee: "00:15:8d:00:02:85:fb:3b"
#  condition:
#    condition: template
#    value_template: "{{ not is_state('group.at_home', 'home') }}"
#  action:
#    - service: notify.mobile_app_ichicane
#      data:
#        message: "Doorbell rang and you're not home"
#    - service: notify.mobile_app_duffel
#      data:
#        message: "Doorbell rang and you're not home"                



#- alias: Loungeroom Double Click
#  trigger:
#    - platform: event
#      event_type: zha_event
#      event_data:
#        #DANNY
#        device_ieee: "00:15:8d:00:02:85:fb:3b"
#        command: click
#        args:
#          click_type: double
#  action:
#   #- service: light.turn_on
#   #  entity_id: light.kitchen
#   #  data:
#   #    brightness: 100
#   #    color_temp: 278
#   #- service: light.turn_on
#   #  entity_id: light.loungeroom
#   #  data:
#   #    brightness: 75
#   #    color_temp: 278
#    - service: switch.toggle
#      entity_id: switch.cooking_light

- alias: Hue Dimmer Kitchen On
  trigger:
    platform: event
    event_type: zha_event
    event_data:
      entity_id: sensor.philips_switch_1_power
      command: "up_short_release"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.kitchen
        state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.kitchen
      data_template:
        brightness: '{{states.light.kitchen.attributes.brightness | int + 25}}'

- alias: Hue Switch Kitchen On
  trigger:
    platform: event
    event_type: zha_event
    event_data:
      #entity_id:  sensor.philips_switch_1_power
      device_id: "0d2b5921884ce9319f0ac3310e2106ac"
      command: "on_short_release"
      #new_state: '3_click_up'
#  condition:
#    condition: and
#    conditions:
#    - condition: template
#      value_template: "{{ trigger.event.data.new_state.state == '1_click_up' }}"
  action:
    - service: light.turn_on
      entity_id: light.kitchen
      data_template:
        brightness: 255
        color_temp: >
          {% if states.light.kitchen.state == 'off' %}
           153
          {% elif states.light.kitchen.attributes.color_temp > 153 %}
            153
          {% else %}
            278
          {% endif %}
        #278 153

- alias: Hue Switch Kitchen Off
  trigger:
    platform: event
    event_type: zha_event
    event_data:
      device_id: "0d2b5921884ce9319f0ac3310e2106ac"
      command: "off_short_release"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.kitchen
        state: 'on'
#    - condition: template
#      value_template: "{{ trigger.event.data.new_state.state == '4_click_up' }}"
  action:
    - service: light.turn_off
      entity_id: light.kitchen


#- alias: Loungeroom Double Click
#  trigger:
#    - platform: event
#      event_type: xiaomi_aqara.click
#      event_data:
#        #DANNY
#        entity_id: binary_sensor.switch_loungeroom
#        click_type: double
#  action:
#    - service: light.turn_on
#      entity_id: light.kitchen
#      data:
#        brightness: 255
#        color_temp: 153
#    - service: switch.turn_on
#      entity_id: switch.cooking_light

###DOOR SENSORS###
- alias: Open Loungeroom Door
  trigger:
    platform: state
    entity_id: group.back_door
    from: 'off'
    to: 'on'
  condition:
    condition: sun
    after: sunset
    after_offset: "-00:45:00"
  action:
    - service: switch.turn_on
      entity_id: switch.mozzie_zapper
    - service: light.turn_on
      entity_id: light.outside_real
#   - delay: '01:00:00'
#   - condition: template
#     value_template: '{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.door_outside_rear.last_updated)) > 3300 }}'
#   - service: switch.turn_off
#     entity_id: switch.mozzie_zapper
    ##3600 = 1 hour
- alias: Close Loungeroom Door
  trigger:
    platform: state
    entity_id: group.back_door
    from: 'on'
    to: 'off'
    for:
      minutes: 60
  condition:
    condition: sun
    after: sunset
    after_offset: "-00:45:00"
  action:
    - service: switch.turn_off
      entity_id: switch.mozzie_zapper

- alias: Close Loungeroom Door for Light
  trigger:
    platform: state
    entity_id: group.back_door
    from: 'on'
    to: 'off'
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
        after_offset: "-00:45:00"
  action:
    - condition: state
      entity_id: input_boolean.outside_triggered
      state: "off"
    - service: light.turn_off
      entity_id: light.outside_real

#####Circadian disable on using cooking light#####

- alias: Turn off Cooking Light
  trigger:
    platform: state
    entity_id: switch.cooking_light
    from: 'on'
    to: 'off'
  condition:
    condition: state
    entity_id: light.kitchen
    state: "on"
  action:
    - service: switch.turn_on
      entity_id: switch.adaptive_lighting_kitchen

- alias: Turn on Cooking Light
  trigger:
    platform: state
    entity_id: switch.cooking_light
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.kitchen
    state: "on"
  action:
    - service: switch.turn_off
      entity_id: switch.adaptive_lighting_kitchen
    #- service: light.turn_on
    #  entity_id: light.kitchen
    #  data:
    #    rgb_color: [0, 0, 255]
    #- delay: 0.5
    #- service: light.turn_on
    #  entity_id: light.kitchen
    #  data:
    #    rgb_color: [0, 255, 0]
    #- delay: 0.5   
    #- service: light.turn_on
    #  entity_id: light.kitchen
    #  data:
    #    rgb_color: [255, 0, 0]        
    - service: light.turn_on
      data:
        entity_id: light.kitchen
        brightness: 255
        color_temp: 153

#flicker kitchen lights for faulty bulb
#- alias: Flicker Kitchen Light
#  trigger:
#    platform: state
#    entity_id: light.kitchen
#    from: 'off'
#    to: 'on'
#  action:
#    - service: light.turn_on
#      entity_id: light.kitchen
#      data:
#        rgb_color: [0, 0, 255]
#    - delay: 0.5
#    - service: light.turn_on
#      entity_id: light.kitchen
#      data:
#        rgb_color: [0, 255, 0]
#    - delay: 0.5   
#    - service: light.turn_on
#      entity_id: light.kitchen
#      data:
#        rgb_color: [255, 0, 0]    
#    - service: switch.turn_off
#      entity_id: switch.adaptive_lighting_kitchen
#    - service: switch.turn_on
#      entity_id: switch.adaptive_lighting_kitchen      

#####Circadian disable on adjust#####


#- alias: Change Hallway Light Brightness
#  trigger:
#    platform: event
#    event_type: state_changed
#    event_data:
#      entity_id: light.hallway
#
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: light.hallway
#        state: "on"
#
#      - condition: template
#        value_template: "{{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_hallway.last_changed) > 7) and (as_timestamp(now()) - as_timestamp(states.automation.arrive_home_after_dark.attributes.last_triggered) > 7) and (as_timestamp(now()) - as_timestamp(states.automation.sunset_at_home.attributes.last_triggered) > 7) }}"
#
#        ##  {% if states.automation.arrive_home_after_dark.attributes.last_triggered != None %}
#                    ##  {% elif states.automation.change_hallway_light_brightness.attributes.last_triggered == None %}
#        ##    {{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_hallway.last_changed) > 2) }}
#        ##  {% endif %}
#  action:
#    - service: switch.turn_off
#      entity_id: switch.circadian_lighting_hallway

#- alias: Change Kitchen Light Brightness
#  trigger:
#    platform: event
#    event_type: state_changed
#    event_data:
#      entity_id: light.kitchen
#
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: light.kitchen
#        state: "on"
#
#      - condition: template
#        value_template: "{{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_kitchen.last_changed) > 7) and (as_timestamp(now()) - as_timestamp(states.automation.arrive_home_after_dark.attributes.last_triggered) > 7) and (as_timestamp(now()) - as_timestamp(states.automation.sunset_at_home.attributes.last_triggered) > 7) }}"
#
#        ##  {% if states.automation.change_kitchen_light_brightness.attributes.last_triggered != None %}
#                    ##  {% elif states.automation.change_kitchen_light_brightness.attributes.last_triggered == None %}
#        ##    {{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_kitchen.last_changed) > 2) }}
#        ##  {% endif %}
#  action:
#    - service: switch.turn_off
#      entity_id: switch.circadian_lighting_kitchen

#- alias: Change Bedroom Light Brightness
#  trigger:
#    platform: event
#    event_type: state_changed
#    event_data:
#      entity_id: light.bedroom
#
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: light.bedroom
#        state: "on"
#
#      - condition: template
#        value_template: "{{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_bedroom.last_changed) > 7) and (as_timestamp(now()) - as_timestamp(states.automation.bedroom_motion_main_lights.attributes.last_triggered) > 7) }}"
#
#        ##  {% if states.automation.change_bedroom_light_brightness.attributes.last_triggered != None %}
#                    ##  {% elif states.automation.change_bedroom_light_brightness.attributes.last_triggered == None %}
#        ##    {{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_bedroom.last_changed) > 2) }}
#        ##  {% endif %}
#  action:
#    - service: switch.turn_off
#      entity_id: switch.circadian_lighting_bedroom

#- alias: Change Loungeroom Light Brightness
#  trigger:
#    platform: event
#    event_type: state_changed
#    event_data:
#      entity_id: light.loungeroom
#
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: light.loungeroom
#        state: "on"
#
#      - condition: template
#        value_template: "{{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_loungeroom.last_changed) > 7) and (as_timestamp(now()) - as_timestamp(states.automation.arrive_home_after_dark.attributes.last_triggered) > 7) and (as_timestamp(now()) - as_timestamp(states.automation.sunset_at_home.attributes.last_triggered) > 7) }}"
#
#        ##  {% if states.automation.change_loungeroom_light_brightness.attributes.last_triggered != None %}
#                    ##  {% elif states.automation.change_loungeroom_light_brightness.attributes.last_triggered == None %}
#        ##    {{ (((trigger.event.data.old_state.attributes.brightness - trigger.event.data.new_state.attributes.brightness) | abs) > 10) and (as_timestamp(now()) - as_timestamp(states.switch.circadian_lighting_loungeroom.last_changed) > 2) }}
#        ##  {% endif %}
#  action:
#    - service: switch.turn_off
#      entity_id: switch.circadian_lighting_loungeroom



##OFFICE LIGHTS##
- alias: 'Turn On Office Lights with Danny PC'
  #initial_state: True
  id: turn_on_office_lights_danny_pc
  trigger:
    - platform: state
      entity_id: group.office_active #switch.danny_s_pc
      from: 'off'
      to: 'on'
  
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: group.at_home
      state: 'home'
    - condition: numeric_state
      below: 80
      entity_id: sensor.office_illuminance

  action:
    - service: light.turn_on
      entity_id: light.office

- alias: 'Turn On Office Lights with Motion Sensor'
  #initial_state: True
  id: turn_on_office_lights_motion_sensor
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_office
      from: 'off'
      to: 'on'
  
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: group.at_home
      state: 'home'
    - condition: numeric_state
      below: 80
      entity_id: sensor.office_illuminance
    - condition: state
      entity_id: switch.danny_s_pc
      state: 'on'
    - condition: state
      entity_id: light.office
      state: 'off'      

  action:
    - service: light.turn_on
      entity_id: light.office

- alias: 'Turn Off Office Lights with Danny PC'
  id: turn_off_office_lights_danny_pc
  #initial_state: True
  trigger:
    - platform: state
      entity_id: group.office_active #switch.danny_s_pc
      from: 'on'
      to: 'off'
      for: '00:15:00'

  action:
    - service: light.turn_off
      entity_id: light.office

- alias: Office Light Toggle
  id: office_light_toggle
  trigger:
    - platform: event
      event_type: zha_event
      event_data:
        device_ieee: "00:15:8d:00:02:85:fb:3b"
        command: click
        args:
          click_type: single
  action:
    - service: light.toggle
      entity_id: light.office
    - condition: state
      entity_id: light.office 
      state: 'on'
    - delay: 00:00:01
    - condition: numeric_state
      entity_id: light.office
      value_template: "{{ state_attr('light.office','brightness') | int }}"
      below: 67
    - service: light.turn_on
      entity_id: light.office  
      data:
        brightness_pct: 65


###TASMOTA/SONOFF###
#- alias: Auto On Office Tasmota
#  trigger:
#    platform: state
#    entity_id: light.office
#    from: 'unavailable'
#  action:
#    - delay: "00:00:01"
#    - service: light.turn_on
#      entity_id: light.office

###THEME ON STARTUP###
- alias: 'Set theme/start homekit at startup'
  #initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: frontend.set_theme
      data:
        name: midnight_blue
#    - service: button.press
#      target:
#        entity_id: button.server_publishallsensors
#    - delay: "00:00:30"
#    - wait_template: >-
#        {% if not states.light.loungeroom_1 %}
#          false
#        {% elif not states.light.loungeroom_2 %}
#          false
#        {% elif not states.light.loungeroom_3 %}
#          false
#        {% elif not states.light.loungeroom_4 %}
#          false
#        {% elif not states.light.kitchen_1 %}
#          false
#        {% elif not states.light.kitchen_2 %}
#          false
#        {% elif not states.light.bathroom %}
#          false
#        # Repeat for every entity
#        {% else %}
#          true
#        {% endif %}
#      timeout: 00:01  # Waits 1 minutes
#      continue_on_timeout: false
##    - condition: template
##      value_template: "{{ states('light.bathroom') != 'unknown' }}"
#    - service: homekit.start

- alias: 'Restart HASS if xiaomi fails at startup'
  #initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
  action:
    - delay: "00:02:05"
    - condition: template
      value_template: "{{ states('light.bathroom') == 'unknown' }}"
    - service: homeassistant.restart

- alias: 'Turn off bin alert bools'
  trigger:
    platform: time
    at: '00:00:01'
  action:
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.danny_bin_alerted
        - input_boolean.liz_bin_alerted
        - input_boolean.both_bin_alerted

    # - service: input_boolean.turn_off
    #   entity_id: input_boolean.liz_bin_alerted
    # - service: input_boolean.turn_off
    #   entity_id: input_boolean.both_bin_alerted

- alias: 'Turn off bedtime bool'
  trigger:
    platform: time
    at: '06:30:00'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.bedtime_triggered
    - service: input_boolean.turn_off
      entity_id: input_boolean.office_aircon_disabled_day      
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id:
          - switch.adaptive_lighting_kitchen
          - switch.adaptive_lighting_bedroom
          - switch.adaptive_lighting_hallway
          - switch.adaptive_lighting_loungeroom
        manual_control: false
    - service: switch.turn_on
      entity_id:  
        - switch.adaptive_lighting_kitchen
        - switch.adaptive_lighting_bedroom
        - switch.adaptive_lighting_hallway
        - switch.adaptive_lighting_loungeroom

#Roku Emulations
- id: turn_all_lights_off
  alias: Turns All Lights Off
  trigger:
    - platform: event
      event_type: roku_command
      event_data:
        source_name: Home Assistant
        type: keypress
        key: Play
  action:
    - service: light.toggle
      entity_id: all

###NEW VERSIONS###
- alias: 'New HASS released'
  #initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.current_hass_release
      not_from:
        - "unknown"
        - "unavailable"
      not_to:
        - "unknown"
        - "unavailable"        
  action:
    - delay: 00:00:03
    - service: notify.mobile_app_ichicane
      data_template:
        title: 'Home Assistant V{{states.sensor.current_hass_release.state}} Released'
        message: 'https://www.home-assistant.io/blog/'
        #target: 'device/iChicane'
#- alias: 'New HASS Docker released'
#  #initial_state: 'on'
#  trigger:
#    - platform: state
#      entity_id: sensor.current_docker_hass_build
#  condition:
#    condition: not
#    conditions:
#      - condition: state
#        entity_id: sensor.current_docker_hass_build
#        state: 'Unavailable'
#  action:
#    - delay: 00:00:03
#    - service: notify.mobile_app_ichicane
#      data_template:
#        title: 'Home Assistant Docker V{{states.sensor.current_docker_hass_build.state}} Available'
#        message: 'https://www.home-assistant.io/blog/'
#        #target: 'device/iChicane'

#- alias: 'New Portainer Docker released'
#  #initial_state: 'on'
#  trigger:
#    - platform: state
#      entity_id: sensor.current_docker_portainer_build
#  condition:
#    condition: not
#    conditions:
#      - condition: state
#        entity_id: sensor.current_docker_portainer_build
#        state: 'Unavailable'
#  action:
#    - delay: 00:00:03
#    - service: notify.mobile_app_ichicane
#      data_template:
#        title: 'Portainer Docker V{{states.sensor.current_docker_portainer_build.state}} Available'
#        message: 'https://hub.docker.com/r/portainer/portainer/'
#        #target: 'device/iChicane'

- alias: Server Torrents Low
  trigger:
    - platform: numeric_state
      entity_id: sensor.system_monitor_disk_free_data_downloads
      below: 30.0
  action:
    - delay: 00:00:10
    - service: notify.mobile_app_ichicane
      data:
        message: "Torrent drive in server has {{states.sensor.system_monitor_disk_free_data_downloads.state}} GB Free"
        title: 'Server torrent drive is low!'

- alias: Server RAID Low
  trigger:
    - platform: numeric_state
      entity_id: sensor.server_raid_free
      below: 30.0
  action:
    - delay: 00:00:10
    - service: notify.mobile_app_ichicane
      data:
        message: "RAID in server has {{states.sensor.server_raid_free.state}} GB Free"
        title: 'Server RAID is low!'

###Turn off cooking light Apple TV####
- alias: 'Turn off cooking light on play Apple TV'
  #initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.lounge
      to: 'playing'
  action:
    - service: switch.turn_off
      entity_id: switch.cooking_light
      
  ###Rainfaill accumulation###
- alias: "Cumulative rainfall total"
  trigger:
    platform: numeric_state
    entity_id: sensor.weather_pws_precip_12am
    below: 0.001
    value_template: "state.state != 'unavailable' and  state.state != 'unknown' }}"
  action:
    - service: input_number.set_value
      data_template: 
        entity_id: input_number.weather_pws_precip_month
        value: "{{ states.input_number.weather_pws_precip_month.state | float + trigger.from_state.state | float }}"
#- alias: "Cumulative rainfall total"
#  trigger:
#    platform: time
#    at: '23:59:58'
#  action:
#    - service: input_number.set_value
#      data_template: 
#        entity_id: input_number.weather_pws_precip_month
#        value: "{{ states.input_number.weather_pws_precip_month.state | float + states.sensor.weather_pws_precip_12am.state | float }}" 

- alias: "Cumulative rainfall reset"
  trigger:
    platform: time
    at: '00:00:03'
  condition:
    condition: template
    value_template: "{{ now().day == 1 }}"
  action:
    - service: input_number.set_value
      data_template: 
        entity_id: input_number.weather_pws_precip_month
        value: "{{ 0 | float }}"   

# PC Speakers On/Off Xiaomi switch

- alias: "PC Speaker on switch with PC"
  trigger:
    platform: state
    entity_id: switch.danny_s_pc
    from: "off"
    to: "on"
  action:
    - service: switch.turn_on
      entity_id: switch.pc_speaker

- alias: "PC Speaker off switch with PC"
  trigger:
    platform: state
    entity_id: switch.danny_s_pc
    from: "on"
    to: "off"
  action:
    - service: switch.turn_off
      entity_id: switch.pc_speaker      



##sprinkler

- alias: "Back Sprinkler before sunset"
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:15:00"
  action:
    - service: switch.turn_on
      entity_id: switch.back_sprinkler   
    - delay: 00:05:00
    - service: switch.turn_off
      entity_id: switch.back_sprinkler     

- alias: "Back Sprinkler Alert"
  trigger:
    platform: state
    entity_id: switch.back_sprinkler
    from: "off"
    to: "on"    
    for: 
      minutes: 30
  action:
    - service: notify.mobile_app_ichicane
      data:
        message: 'You might want to turn it off'
        title: 'Sprinklers been on for 30 minutes!'
        data:
          actions:
           - action: 'SPRINKLER_OFF'
             title: 'Turn off Sprinkler'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'        
    
    - service: notify.mobile_app_duffel
      data:
        message: 'You might want to turn it off'
        title: 'Sprinklers been on for 30 minutes!'
        data:
          actions:
           - action: 'SPRINKLER_OFF'
             title: 'Turn off Sprinkler'
             destructive: true           
           - action: 'DO_NOTHING'
             title: 'Do nothing'               

- alias: iOS Push - Turn Off Sprinkler
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: SPRINKLER_OFF
  condition:
    condition: state
    entity_id: switch.back_sprinkler  
    state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.back_sprinkler

#- id: '1686468739793'
#  alias: Update Map Extractor camera
#  description: ''
#  use_blueprint:
#    path: PiotrMachowski/update_map_extractor.yaml
#    input:
#      mode_to_handle: turn_off_when_docked
#      vacuum: vacuum.roborock_s6_pure
#      camera: camera.xiaomi_cloud_map_extractor

- alias: 'Turn off Power Monitor'
  trigger:
    platform: state
    entity_id: switch.power_monitoring_switch
    to: 'off'      
  action:
    - service: notify.mobile_app_ichicane
      data:
        message: 'Yikes'
        title: Power Monitor switch turned off!

- alias: 'Server RAM full'
  id: server_ram_full
  trigger:
    platform: numeric_state
    entity_id: sensor.proxmox_ram_percent
    above: 92

  action:
    - service: notify.mobile_app_ichicane
      data:
        title: 'Server RAM above 92%'
        message: "Palworld at it again"        

#- alias: 'Test Office Temp Zigbee'
#  id: test_office_temp_zigbee
#  trigger:
#    platform: state
#    entity_id: sensor.office_test_temperature
#    to: 'unavailable'
#
#  action:
#    - service: notify.mobile_app_ichicane
#      data:
#        title: 'Office temp died'
#        message: "he dead"       

- alias: 'Turn off Server RDP Firewall rule'
  id: TurnoffServerRDPFirewallrule
  trigger:
  #  platform: state
  #  entity_id: switch.pfsense_home_nat_port_forward_rule_1295623043_server_rdp
  #  to: 'on'  
  #  for:     
  #    hours: 18  trigger:
    platform: time
    at: '03:00:00'
  condition:
    condition: state
    entity_id: switch.pfsense_home_nat_port_forward_rule_1295623043_server_rdp
    state: 'on'    
  action:
    - service: switch.turn_off
      entity_id: switch.pfsense_home_nat_port_forward_rule_1295623043_server_rdp
    - service: notify.mobile_app_ichicane
      data:
        message: 'Server RDP open at 3am'
        title: Disabling Server RDP Firewall Allow! 

- alias: 'Turn off Chicane RDP Firewall rule'
  id: TurnoffChicaneRDPFirewallrule
  trigger:
  #  platform: state
  #  entity_id: switch.pfsense_home_nat_port_forward_rule_1295623043_server_rdp
  #  to: 'on'  
  #  for:     
  #    hours: 18  trigger:
    platform: time
    at: '03:00:00'
  condition:
    condition: state
    entity_id: switch.pfsense_home_nat_port_forward_rule_1295623011_chic_rdp
    state: 'on'    
  action:
    - service: switch.turn_off
      entity_id: switch.pfsense_home_nat_port_forward_rule_1295623011_chic_rdp
    - service: notify.mobile_app_ichicane
      data:
        message: 'Chicane RDP open at 3am'
        title: Disabling Chicane RDP Firewall Allow!         

- alias: 'Turn off RTMP Stream Firewall rule'
  id: TurnoffRTMPStreamFirewallrule
  trigger:
  #  platform: state
  #  entity_id: switch.pfsense_home_nat_port_forward_rule_1295623043_server_rdp
  #  to: 'on'  
  #  for:     
  #    hours: 18  trigger:
    platform: time
    at: '03:00:00'
  condition:
    condition: state
    entity_id: switch.pfsense_home_nat_port_forward_rule_1729725645_rtmp_forward
    state: 'on'    
  action:
    - service: switch.turn_off
      entity_id: switch.pfsense_home_nat_port_forward_rule_1729725645_rtmp_forward
    - service: notify.mobile_app_ichicane
      data:
        message: 'Chicane RTMP Stream at 3am'
        title: Disabling RTMP Stream Firewall Allow!